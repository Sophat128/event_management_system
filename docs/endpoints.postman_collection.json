{
	"info": {
		"_postman_id": "b40c8844-50b9-4376-a392-00ce3a29b0f3",
		"name": "endpoints",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "19730747"
	},
	"item": [
		{
			"name": "Profile",
			"item": [
				{
					"name": "get_all",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost/api/profiles/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"api",
								"profiles",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "search",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost/api/profiles/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"api",
								"profiles",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "get_byID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost/api/profiles/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"api",
								"profiles",
								"1"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "create",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \n    \"userId\": 33,\n    \"firstName\": \"Sreyneat\",\n    \"lastName\": \"Hello\",\n    \"phoneNumber\": \"889-012-3457\",\n    \"bio\": \"Audio Technician\"\n  }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost/api/profiles/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"api",
								"profiles",
								""
							]
						},
						"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
					},
					"response": []
				},
				{
					"name": "Update data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 204]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"firstName\": \"Seyha\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost/api/profiles/33",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"api",
								"profiles",
								"33"
							]
						},
						"description": "This is a PUT request and it is used to overwrite an existing piece of data. For instance, after you create an entity with a POST request, you may want to modify that later. You can do that using a PUT request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful PUT request typically returns a `200 OK`, `201 Created`, or `204 No Content` response code."
					},
					"response": []
				},
				{
					"name": "Delete data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful DELETE request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 202, 204]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost/api/profiles/33",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"api",
								"profiles",
								"33"
							]
						},
						"description": "This is a DELETE request, and it is used to delete data that was previously created via a POST request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful DELETE request typically returns a `200 OK`, `202 Accepted`, or `204 No Content` response code."
					},
					"response": []
				},
				{
					"name": "search",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": ""
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "event",
			"item": [
				{
					"name": "get_all_events",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"userId\": 1,\n        \"id\": 1000,\n        \"title\": \"sunt aut facere repellat provident occaecati excepturi optio reprehenderit\",\n        \"body\": \"quia et suscipit\\nsuscipit recusandae consequuntur expedita et cum\\nreprehenderit molestiae ut ut quas totam\\nnostrum rerum est autem sunt rem eveniet architecto\"\n    }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:80/api/events",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"events"
							]
						}
					},
					"response": []
				},
				{
					"name": "search",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"userId\": 1,\n        \"id\": 1000,\n        \"title\": \"sunt aut facere repellat provident occaecati excepturi optio reprehenderit\",\n        \"body\": \"quia et suscipit\\nsuscipit recusandae consequuntur expedita et cum\\nreprehenderit molestiae ut ut quas totam\\nnostrum rerum est autem sunt rem eveniet architecto\"\n    }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:80/api/events",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"events"
							]
						}
					},
					"response": []
				},
				{
					"name": "get_event_by_id",
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				},
				{
					"name": "create_event",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"userId\": 1,\n        \"id\": 1000,\n        \"title\": \"sunt aut facere repellat provident occaecati excepturi optio reprehenderit\",\n        \"body\": \"quia et suscipit\\nsuscipit recusandae consequuntur expedita et cum\\nreprehenderit molestiae ut ut quas totam\\nnostrum rerum est autem sunt rem eveniet architecto\"\n    }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://jsonplaceholder.typicode.com/posts?101",
							"protocol": "https",
							"host": [
								"jsonplaceholder",
								"typicode",
								"com"
							],
							"path": [
								"posts"
							],
							"query": [
								{
									"key": "101",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "update_event",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n            \n           \n            \"date\": \"2024-06-10\"\n           \n        }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:80/api/events/2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"events",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:80/api/events/2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"events",
								"2"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "speaker",
			"item": [
				{
					"name": "getall",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost/api/speakers",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"api",
								"speakers"
							]
						}
					},
					"response": []
				},
				{
					"name": "search",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost/api/speakers",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"api",
								"speakers"
							]
						}
					},
					"response": []
				},
				{
					"name": "get_byID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": ""
						}
					},
					"response": []
				},
				{
					"name": "Create",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\n      \"name\": \"sophat\",\n      \"bio\": \"Testing\"\n  \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost/api/speakers",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"api",
								"speakers"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\n      \"name\": \"Seyha\"\n    \n  \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost/api/speakers/3",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"api",
								"speakers",
								"3"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost/api/speakers/3",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"api",
								"speakers",
								"3"
							]
						}
					},
					"response": []
				},
				{
					"name": "Search",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost/api/speakers/search?name=sophat",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"api",
								"speakers",
								"search"
							],
							"query": [
								{
									"key": "name",
									"value": "sophat"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "ticket",
			"item": [
				{
					"name": "get_all_tickets",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"userId\": 1,\n        \"id\": 1000,\n        \"title\": \"sunt aut facere repellat provident occaecati excepturi optio reprehenderit\",\n        \"body\": \"quia et suscipit\\nsuscipit recusandae consequuntur expedita et cum\\nreprehenderit molestiae ut ut quas totam\\nnostrum rerum est autem sunt rem eveniet architecto\"\n    }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:80/api/tickets/search?purchaseDate=2024-05-10",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"tickets",
								"search"
							],
							"query": [
								{
									"key": "purchaseDate",
									"value": "2024-05-10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "search",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"userId\": 1,\n        \"id\": 1000,\n        \"title\": \"sunt aut facere repellat provident occaecati excepturi optio reprehenderit\",\n        \"body\": \"quia et suscipit\\nsuscipit recusandae consequuntur expedita et cum\\nreprehenderit molestiae ut ut quas totam\\nnostrum rerum est autem sunt rem eveniet architecto\"\n    }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:80/api/tickets/search?purchaseDate=2024-05-10",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"tickets",
								"search"
							],
							"query": [
								{
									"key": "purchaseDate",
									"value": "2024-05-10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "get_ticket_by_id",
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				},
				{
					"name": "create_ticket",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"eventId\": 4,\n    \"userId\": 9,\n    \"ticketType\": \"VIP\",\n    \"purchaseDate\": \"2024-05-10\"\n  }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:80/api/tickets",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"tickets"
							]
						}
					},
					"response": []
				},
				{
					"name": "update_ticket",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"ticketType\": \"VIP\"\n   \n  }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:80/api/tickets/2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"tickets",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:80/api/tickets/2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"tickets",
								"2"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "user",
			"item": [
				{
					"name": "getAllUsers",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost/api/users",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "getUsersById",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost/api/users/2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"api",
								"users",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "createNewUser",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"ili\",\r\n    \"password\": \"ili2222\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost/api/users",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "updateUserById",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"Seyha\",\r\n    \"password\": \"Seyha!1111\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost/api/users/2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"api",
								"users",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteUserById",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost/api/users/8",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"api",
								"users",
								"8"
							]
						}
					},
					"response": []
				},
				{
					"name": "searchUsers",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:80/api/users/serch?=Kimly",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"users",
								"serch"
							],
							"query": [
								{
									"key": "",
									"value": "Kimly"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	]
}